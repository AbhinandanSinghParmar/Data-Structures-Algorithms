import java.util.*;

public class ArrayPractice {

  // 1. Declare and print an array
  public static void printPredefinedArray() {
    int[] arr = { 1, 2, 3, 4, 5 };
    System.out.println(Arrays.toString(arr));
  }

  // 2. Input and output elements of an array
  public static int[] inputAndPrintArray(Scanner sc) {
    System.out.print("Number of elements: ");
    int n = sc.nextInt();
    int[] arr = new int[n];
    System.out.println("Enter elements one by one:");
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    System.out.println("Input Array: " + Arrays.toString(arr));
    return arr;
  }

  // 3. Find the sum of elements in an array
  public static int sumOfArray(int[] arr) {
    int sum = 0;
    for (int value : arr) {
      sum += value;
    }
    return sum;
  }

  // 4. Find the average of elements in an array
  public static double averageOfArray(int[] arr) {
    return (double) sumOfArray(arr) / arr.length;
  }

  // 5 & 6. Find the maximum and minimum element
  public static int findMax(int[] arr) {
    int max = arr[0];
    for (int value : arr) {
      if (value > max) max = value;
    }
    return max;
  }

  public static int findMin(int[] arr) {
    int min = arr[0];
    for (int value : arr) {
      if (value < min) min = value;
    }
    return min;
  }

  // 7. Count even and odd numbers
  public static void countEvenOdd(int[] arr) {
    int even = 0, odd = 0;
    for (int val : arr) {
      if (val % 2 == 0) even++;
      else odd++;
    }
    System.out.println("Even elements: " + even + ", Odd elements: " + odd);
  }

  // 8. Print elements at even indices
  public static void printEvenIndexElements(int[] arr) {
    System.out.println("Elements at even indices:");
    for (int i = 0; i < arr.length; i++) {
      if (i % 2 == 0) {
        System.out.println("Index " + i + ": " + arr[i]);
      }
    }
  }

  // 9. Print elements at odd indices
  public static void printOddIndexElements(int[] arr) {
    System.out.println("Elements at odd indices:");
    for (int i = 0; i < arr.length; i++) {
      if (i % 2 != 0) {
        System.out.println("Index " + i + ": " + arr[i]);
      }
    }
  }

  // 10. Count positive and negative numbers
  public static void countNegativeNumbers(int[] arr) {
    int count = 0;
    for (int val : arr) {
      if (val < 0) count++;
    }
    System.out.println("Negative number count: " + count);
  }

  // 11. Replace all negative numbers with zero
  public static void replaceNegativesWithZero(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
      if (arr[i] < 0) arr[i] = 0;
    }
    System.out.println("After replacing negatives: " + Arrays.toString(arr));
  }

  // 12. Search an element (Linear Search)
  public static void linearSearch(int[] arr, int target) {
    boolean found = false;
    for (int i = 0; i < arr.length; i++) {
      if (arr[i] == target) {
        System.out.println("Element found at index: " + i);
        found = true;
      }
    }
    if (!found) {
      System.out.println("Element not in array");
    }
  }

  // 13. Copy an array
  public static int[] copyArray(int[] arr) {
    int[] copy = Arrays.copyOf(arr, arr.length);
    System.out.println("Copied array: " + Arrays.toString(copy));
    return copy;
  }

  // 14. Reverse an array
  public static int[] reverseArray(int[] arr) {
    int[] reversed = new int[arr.length];
    for (int i = arr.length - 1, j = 0; i >= 0; i--, j++) {
      reversed[j] = arr[i];
    }
    System.out.println("Reversed array: " + Arrays.toString(reversed));
    return reversed;
  }

  // 15. Swap first and last elements
  public static void swapFirstLast(int[] arr) {
    int temp = arr[0];
    arr[0] = arr[arr.length - 1];
    arr[arr.length - 1] = temp;
    System.out.println("After swapping first and last: " + Arrays.toString(arr));
  }

  // 16. Print array in reverse order
  public static void printArrayInReverse(int[] arr) {
    System.out.print("Array in reverse order: ");
    for (int i = arr.length - 1; i >= 0; i--) {
      System.out.print(arr[i] + " ");
    }
    System.out.println();
  }

  // 17. Count frequency of a given number
  public static void countFrequency(int[] arr, int target) {
    int freq = 0;
    for (int val : arr) {
      if (val == target) freq++;
    }
    System.out.println("Frequency of " + target + ": " + freq);
  }

  // 18. Find the index of a specific element
  public static void findElementIndex(int[] arr, int target) {
    boolean found = false;
    for (int i = 0; i < arr.length; i++) {
      if (arr[i] == target) {
        System.out.println("Element found at index: " + i);
        found = true;
      }
    }
    if (!found) System.out.println("Element not found in array");
  }

  // 19. Replace all even numbers with -1
  public static void replaceEvenWithNegativeOne(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
      if (arr[i] % 2 == 0) arr[i] = -1;
    }
    System.out.println("After replacing evens with -1: " + Arrays.toString(arr));
  }

  // 20. Multiply all elements of the array
  public static void multiplyArrayElements(int[] arr) {
    int product = 1;
    for (int val : arr) {
      product *= val;
    }
    System.out.println("Product of array elements: " + product);
  }

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    printPredefinedArray();

    int[] inputArray = inputAndPrintArray(sc);

    System.out.println("Sum: " + sumOfArray(inputArray));
    System.out.println("Average: " + averageOfArray(inputArray));
    System.out.println("Max: " + findMax(inputArray));
    System.out.println("Min: " + findMin(inputArray));

    countEvenOdd(inputArray);
    printEvenIndexElements(inputArray);
    printOddIndexElements(inputArray);

    int[] arrayWithNegatives = { -1, 10, 11, -9, 90 };
    System.out.println("Original array: " + Arrays.toString(arrayWithNegatives));
    countNegativeNumbers(arrayWithNegatives);
    replaceNegativesWithZero(arrayWithNegatives);

    int[] searchArray = { 1, 6, 90, 20, 15 };
    System.out.println("Search array: " + Arrays.toString(searchArray));
    System.out.print("Enter element to search: ");
    int target = sc.nextInt();
    linearSearch(searchArray, target);

    reverseArray(searchArray);
    copyArray(searchArray);
    printArrayInReverse(searchArray);
    swapFirstLast(searchArray);

    int[] freqArray = { 10, 4, 1, 5, 10, 98, 10, 1 };
    System.out.println("Frequency array: " + Arrays.toString(freqArray));
    System.out.print("Enter element to count frequency: ");
    int freqTarget = sc.nextInt();
    countFrequency(freqArray, freqTarget);

    findElementIndex(freqArray, freqTarget);
    replaceEvenWithNegativeOne(inputArray);
    multiplyArrayElements(freqArray);
  }
}
