import java.util.*;

public class Recursion {

  public static int printNumbersInOrder(int current, int end) {
    if (current > end) {
      return -1;
    } else {
      System.out.print(current + " ");
      return (printNumbersInOrder(current + 1, end));
    }
  }

  public static int printNumbersInReverse(int n) {
    if (n == 0) {
      return -1;
    } else {
      System.out.print(n + ",");
      return (printNumbersInReverse(n - 1));
    }
  }

  public static int sumOfNaturalNumbers(int n) {
    if (n == 0) {
      return 0;
    } else {
      return (n + sumOfNaturalNumbers(n - 1));
    }
  }

  public static int printHelloNTimes(int n) {
    if (n == 0) {
      return -1;
    } else {
      System.out.println("Hello my dear");
      return (printHelloNTimes(n - 1));
    }
  }

  public static int productOfNaturalNumbers(int n) {
    if (n == 1) {
      return 1;
    } else {
      return (n * productOfNaturalNumbers(n - 1));
    }
  }

  public static int factorial(int n) {
    if (n == 1) {
      return 1;
    } else {
      return (n * factorial(n - 1));
    }
  }

  public static int fibonacci(int n) {
    if (n == 1) {
      return 1;
    } else if (n == 0) {
      return 0;
    } else {
      return (fibonacci(n - 1) + fibonacci(n - 2));
    }
  }

  public static int reverseAndCheckPalindrome(int n) {
    int reversed = Integer.parseInt(reverseDigits(n, ""));
    return reversed;
  }

  public static String reverseDigits(int n, String result) {
    if (n == 0) {
      return result;
    }
    result += n % 10;
    n = n / 10;
    return reverseDigits(n, result);
  }

  public static int countDigits(int n, int count) {
    if (n == 0) {
      return count;
    }
    return countDigits(n / 10, count + 1);
  }

  public static int sumOfDigits(int n, int sum) {
    if (n == 0) {
      return sum;
    }
    return sumOfDigits(n / 10, sum + (n % 10));
  }

  public static int sumOfSquares(int n, int sum) {
    if (n == 0) {
      return sum;
    }
    return sumOfSquares(n - 1, sum + (n * n));
  }

  public static int printEvenNumbers(int n) {
    if (n <= 0) {
      return 0;
    } else if (n % 2 == 0) {
      System.out.println(n);
    }
    return printEvenNumbers(n - 1);
  }

  public static int sumArray(int[] arr, int index) {
    if (index < 0 || index >= arr.length) {
      return 0;
    } else {
      System.out.println("Array value: " + arr[index]);
      return arr[index] + sumArray(arr, index + 1);
    }
  }

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.print("Enter value: ");
    int n = sc.nextInt();

    System.out.println("Numbers in reverse");
    printNumbersInReverse(n);
    System.out.println();

    System.out.println("Numbers in order");
    printNumbersInOrder(1, n);
    System.err.println();

    System.out.println("Hellodear function call");
    printHelloNTimes(n);

    int sum = sumOfNaturalNumbers(n);
    int prod = productOfNaturalNumbers(n);

    System.out.println("Sum of natural numbers: " + sum);
    System.out.println("Product of natural numbers: " + prod);

    int fib = fibonacci(n);
    System.out.println("Fibonacci of " + n + " is: " + fib);

    int fact = factorial(n);
    System.out.println("Factorial is: " + fact);

    int evenResult = printEvenNumbers(n);
    System.out.println(evenResult);

    int squareSum = sumOfSquares(n, 0);
    System.out.println("Sum of squares is: " + squareSum);

    System.out.print("Number to reverse: ");
    int rev = sc.nextInt();
    int reversed = Integer.parseInt(reverseDigits(rev, ""));
    System.out.println("Reversed number is: " + reversed);

    int palinCheck = reverseAndCheckPalindrome(rev);
    if (palinCheck == rev) {
      System.out.println("Is palindrome");
    } else {
      System.out.println("Not palindrome");
    }

    int digitCount = countDigits(rev, 0);
    System.out.println("Number of digits are: " + digitCount);

    int digitSum = sumOfDigits(rev, 0);
    System.out.println("Sum of digits are: " + digitSum);

    int arr[] = { 7, 9, 10, 2, 1, 3 };
    int arrSum = sumArray(arr, 0);
    System.out.println("Sum of array values is: " + arrSum);
  }
}
